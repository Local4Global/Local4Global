{"ast":null,"code":"import api from './api';\nexport const registerAgency = async credentials => {\n  try {\n    const response = await api.post('/agencies/register', credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering agency:', error);\n    throw error;\n  }\n};\nexport const loginAgency = async credentials => {\n  try {\n    const response = await api.post('/auth', credentials); // Asegúrate de que la ruta sea correcta\n    const {\n      token,\n      agencyId\n    } = response.data; // Asegúrate de que el backend envíe token y agencyId\n    localStorage.setItem('token', token); // Utiliza siempre la clave 'token'\n    if (agencyId) {\n      localStorage.setItem('agencyId', agencyId);\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in agency:', error);\n    throw error;\n  }\n};\nexport const authenticateAgency = async credentials => {\n  try {\n    const response = await api.post('/auth', credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error authenticating agency:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","registerAgency","credentials","response","post","data","error","console","loginAgency","token","agencyId","localStorage","setItem","authenticateAgency"],"sources":["C:/Users/edgar/OneDrive/Escritorio/Edgar/Local4Global/frontend/src/services/auth.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const registerAgency = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/agencies/register', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error registering agency:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginAgency = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/auth', credentials); // Asegúrate de que la ruta sea correcta\r\n    const { token, agencyId } = response.data; // Asegúrate de que el backend envíe token y agencyId\r\n    localStorage.setItem('token', token); // Utiliza siempre la clave 'token'\r\n    if (agencyId) {\r\n      localStorage.setItem('agencyId', agencyId);\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error logging in agency:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const authenticateAgency = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/auth', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error authenticating agency:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,cAAc,GAAG,MAAOC,WAAW,IAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,oBAAoB,EAAEF,WAAW,CAAC;IAClE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAON,WAAW,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,OAAO,EAAEF,WAAW,CAAC,CAAC,CAAC;IACvD,MAAM;MAAEO,KAAK;MAAEC;IAAS,CAAC,GAAGP,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC3CM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC,CAAC,CAAC;IACtC,IAAIC,QAAQ,EAAE;MACZC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;IAC5C;IACA,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAG,MAAOX,WAAW,IAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,OAAO,EAAEF,WAAW,CAAC;IACrD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}