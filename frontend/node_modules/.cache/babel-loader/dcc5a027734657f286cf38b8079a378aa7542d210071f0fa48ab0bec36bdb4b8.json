{"ast":null,"code":"import axios from 'axios';\n\n// Crear una instancia de Axios con la configuración base\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://local4global-590d2911b33f.herokuapp.com/api'\n});\n\n// Interceptor para añadir el token de autenticación a todas las solicitudes\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Asegúrate de usar la misma clave que en los otros lugares\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["C:/Users/edgar/OneDrive/Escritorio/Edgar/Local4Global/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Crear una instancia de Axios con la configuración base\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'https://local4global-590d2911b33f.herokuapp.com/api',\r\n});\r\n\r\n// Interceptor para añadir el token de autenticación a todas las solicitudes\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token'); // Asegúrate de usar la misma clave que en los otros lugares\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC5C,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}